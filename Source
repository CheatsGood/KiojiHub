local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CheatsGood/KiojiHub/refs/heads/main/Source"))()


library:init() -- Initalizes Library Do Not Delete This

local Window = library.NewWindow({
	title = "Kioji Hub",
	size = UDim2.new(0, 525, 0, 650)
})

local tabs = {
    Tab1 = Window:AddTab("General"),
	Tab2 = Window:AddTab("Exploits"),
	Settings = library:CreateSettingsTab(Window),
}

-- 1 = Set Section Box To The Left
-- 2 = Set Section Box To The Right

local sections = {
	Section1 = tabs.Tab1:AddSection("Section1", 1),
	Section2 = tabs.Tab1:AddSection("Section2", 2),
}

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local speedConnection -- conexão que aplica a velocidade
local speedEnabled = false
local speedValue = 16 -- valor do slider
local defaultSpeed = 16 -- velocidade padrão do Roblox

-- Função que ativa/desativa a velocidade
local function toggleSpeed(state)
    speedEnabled = state
    if not state then
        -- Desconecta o loop
        if speedConnection then
            speedConnection:Disconnect()
            speedConnection = nil
        end

        -- Restaura velocidade padrão
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = defaultSpeed
            end
        end

        return
    end

    -- Liga o loop
    if not speedConnection then
        speedConnection = RunService.RenderStepped:Connect(function()
            local character = player.Character
            if not character then return end

            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if not humanoid then return end

            humanoid.WalkSpeed = speedValue
        end)
    end
end



-- Botão/toggle: ativa ou desativa speed
sections.Section1:AddToggle({
    enabled = true,
    text = "Ativar Speed",
    flag = "Button_Speed",
    tooltip = "Ativa ou desativa a velocidade customizada",
    risky = false,
    confirm = false,
    callback = function(v)
        toggleSpeed(v)
    end
})

-- Slider: muda o valor da velocidade
sections.Section1:AddSlider({
    text = "Velocidade",
    flag = "Slider_Speed",
    suffix = "",
    value = defaultSpeed,
    min = 1,
    max = 250,
    increment = 1,
    tooltip = "Muda a velocidade do jogador",
    risky = false,
    callback = function(v)
        speedValue = v
    end
})

local jumpConnection -- conexão que aplica o jump
local jumpEnabled = false
local jumpValue = 50 -- valor inicial do slider (padrão do Roblox é 50)
local defaultJump = 50 -- jump padrão do Roblox

-- Função que ativa/desativa o jump
local function toggleJump(state)
    jumpEnabled = state
    if not state then
        -- Desconecta o loop
        if jumpConnection then
            jumpConnection:Disconnect()
            jumpConnection = nil
        end

        -- Restaura JumpPower padrão
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = defaultJump
            end
        end

        return
    end

    -- Liga o loop
    if not jumpConnection then
        jumpConnection = RunService.RenderStepped:Connect(function()
            local character = player.Character
            if not character then return end

            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if not humanoid then return end

            humanoid.JumpPower = jumpValue
        end)
    end
end

-- Botão/toggle: ativa ou desativa jump
sections.Section1:AddToggle({
    enabled = true,
    text = "Ativar Jump",
    flag = "Button_Jump",
    tooltip = "Ativa ou desativa o jump customizado",
    risky = false,
    confirm = false,
    callback = function(v)
        toggleJump(v)
    end
})

-- Slider: muda o valor do jump
sections.Section1:AddSlider({
    text = "Jump Power",
    flag = "Slider_Jump",
    suffix = "",
    value = defaultJump,
    min = 10,
    max = 500,
    increment = 1,
    tooltip = "Muda o JumpPower do jogador",
    risky = false,
    callback = function(v)
        jumpValue = v
    end
})


--[[
sections.Section1:AddToggle({
	enabled = true,
	text = "Toggle1",
	flag = "Toggle_1",
	tooltip = "Tooltip1",
	risky = true, -- turns text to red and sets label to risky
	callback = function(lol)
	    print("Toggle Is Now Set To : ".. lol)
	end
})

sections.Section1:AddButton({
	enabled = true,
	text = "Button1",
	flag = "Button_1",
	tooltip = "Tooltip1",
	risky = false,
	confirm = false, -- shows confirm button
	callback = function(v)
	    print(v)
	end
})

sections.Section1:AddSeparator({
	text = "Separator"
})

sections.Section1:AddSlider({
	text = "Slider", 
	flag = 'Slider_1', 
	suffix = "", 
	value = 0.000,
	min = 0.1, 
	max = 0.999,
	increment = 0.001,
	tooltip = "Tooltip1",
	risky = false,
	callback = function(v) 
		print("Slider Value Is Now : ".. v)
	end
})

sections.Section1:AddBind({
	text = "Keybind",
	flag = "Key_1",
	nomouse = true,
	noindicator = true,
	tooltip = "Tooltip1",
	mode = "toggle",
	bind = Enum.KeyCode.Q,
	risky = false,
	keycallback = function(v)
	    print("Keybind Changed!")
	end
})

sections.Section1:AddList({
	enabled = true,
	text = "List",
	flag = "List_1",
	multi = false,
	tooltip = "Tooltip1",
    risky = false,
    dragging = false,
    focused = false,
	value = "1",
	values = {
		"1",
		"2",
		"3"
	},
	callback = function(v)
	    print("List Value Is Now : "..v)
	end
})

sections.Section1:AddBox({
    enabled = true,
    focused = true,
    text = "TextBox1",
    input = "PlaceHolder1",
	flag = "Text_1",
	risky = false,
	callback = function(v)
	    print(v)
	end
})

sections.Section1:AddText({
    enabled = true,
    text = "Text1",
    flag = "Text_1",
    risky = false,
})

sections.Section1:AddColor({
    enabled = true,
    text = "ColorPicker1",
    flag = "Color_1",
    tooltip = "ToolTip1",
    color = Color3.new(255, 255, 255),
    trans = 0,
    open = false,
    callback = function()
        
    end
})
]]
library:SendNotification("Haru Kioji Hub Loaded", 5, Color3.new(255, 0, 0))

--Window:SetOpen(true) -- Either Close Or Open Window
